<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>数据结构课程设计—预习日志</title>
    <url>/2023/05/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E2%80%94%E9%A2%84%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<h1 id="课程设计预习日志一"><a href="#课程设计预习日志一" class="headerlink" title="课程设计预习日志一"></a>课程设计预习日志一</h1><h2 id="一、数据结构类型定义"><a href="#一、数据结构类型定义" class="headerlink" title="一、数据结构类型定义"></a>一、数据结构类型定义</h2><h3 id="1-队伍信息"><a href="#1-队伍信息" class="headerlink" title="1. 队伍信息"></a>1. 队伍信息</h3><p>队伍的信息定义为Team类，成员变量为</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	string teamID;<span class="comment">//参赛队编号</span></span><br><span class="line">	string workTitles;<span class="comment">//参赛作品名称</span></span><br><span class="line">	string schoolName;<span class="comment">//参赛学校</span></span><br><span class="line">	string category;<span class="comment">//赛事类别</span></span><br><span class="line">	string participant;<span class="comment">//参赛者</span></span><br><span class="line">	string teacher;<span class="comment">//指导老师</span></span><br></pre></td></tr></table></figure>
<p>并给出读取与修改的成员函数public:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintTeamINFO</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setTeamID</span><span class="params">(string teamID)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setWorkTitles</span><span class="params">(string workTitle)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setSchoolName</span><span class="params">(string schoolName)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setCategory</span><span class="params">(string category)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setParticipant</span><span class="params">(string participant)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setTeacher</span><span class="params">(string teacher)</span></span>;</span><br><span class="line"><span class="function">string <span class="title">getTeamID</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">string <span class="title">getWorkTitles</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">string <span class="title">getSchoolName</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">string <span class="title">getCategory</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">string <span class="title">getParticipant</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">string <span class="title">getTeacher</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>
<p>由于添加时是从文件读取，不存在数据缺失，因此为了方便创建队伍，构造函数的参数为全体成员变量</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Team</span>();</span><br><span class="line"><span class="built_in">Team</span>(string teamID, string workTitles, string schoolName, string category, string participant, string teacher);</span><br></pre></td></tr></table></figure>

<p>以上声明均在Team.h头文件中，并在Team.cpp中给出具体定义</p>
<h3 id="2-二叉搜索树（BST）"><a href="#2-二叉搜索树（BST）" class="headerlink" title="2. 二叉搜索树（BST）"></a>2. 二叉搜索树（BST）</h3><p>二叉树的节点定义为</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">	Team team;</span><br><span class="line">	node* left = <span class="literal">NULL</span>;</span><br><span class="line">	node* right = <span class="literal">NULL</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h2 id="二、各项操作函数声明"><a href="#二、各项操作函数声明" class="headerlink" title="二、各项操作函数声明"></a>二、各项操作函数声明</h2><h3 id="1-队伍的增删改查功能"><a href="#1-队伍的增删改查功能" class="headerlink" title="1. 队伍的增删改查功能"></a>1. 队伍的增删改查功能</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Add</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Search</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Del</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Edit</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>
<p>Team对象自带修改数据功能，当查找到以后可直接修改</p>
<h3 id="2-二叉搜索树（BST）相关操作定义"><a href="#2-二叉搜索树（BST）相关操作定义" class="headerlink" title="2. 二叉搜索树（BST）相关操作定义"></a>2. 二叉搜索树（BST）相关操作定义</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">node* <span class="title">search</span><span class="params">(Team t)</span></span>;<span class="comment">//查找节点</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Insert</span><span class="params">(node* &amp;root,Team t)</span></span>;<span class="comment">//插入新的节点</span></span><br><span class="line"><span class="function">node* <span class="title">Create</span><span class="params">()</span></span>;<span class="comment">//构造BST</span></span><br></pre></td></tr></table></figure>
<h2 id="三、文件读取"><a href="#三、文件读取" class="headerlink" title="三、文件读取"></a>三、文件读取</h2><h3 id="C-文件流"><a href="#C-文件流" class="headerlink" title="C++文件流"></a>C++文件流</h3><p>使用c++文件读取需导入c++标准库中的<strong>fstream</strong><br><strong>fstream</strong>中提供三种数据类型，分别为：</p>
<ol>
<li>ofstream ，输出文件流，主要用于创建文件并向文件写入信息</li>
<li>ifstream，输入文件流，主要用于读取文件信息</li>
<li>fstream，文件流，兼具ofstream和ifstream的功能<br>该项目只要求读取team.txt中的内容，无需写入新的内容，因此使用ifstream即可</li>
</ol>
<h3 id="文件读取步骤"><a href="#文件读取步骤" class="headerlink" title="文件读取步骤"></a>文件读取步骤</h3><p>1.创建一个文件对象</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">ifstream file;</span><br></pre></td></tr></table></figure>
<p>2.打开文件</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">file.<span class="built_in">open</span>(<span class="string">&quot;team.txt&quot;</span>,ios::in);<span class="comment">//ios::in为打开模式，in表示只读</span></span><br></pre></td></tr></table></figure>
<p>3.读取文件<br>使用<strong>getline（）</strong>函数，读取每一行的数据</p>
<h1 id="课程设计预习日志二"><a href="#课程设计预习日志二" class="headerlink" title="课程设计预习日志二"></a>课程设计预习日志二</h1><h2 id="一、队伍信息初始化"><a href="#一、队伍信息初始化" class="headerlink" title="一、队伍信息初始化"></a>一、队伍信息初始化</h2><p>队伍信息保存在<strong>team.txt</strong>文件中，需要先读入文件中的信息保存至一个数据容器中才能进行后续操作。在此项目中选用<strong>线性表</strong>作为数据容器，因为线性表具有<strong>随机存取</strong>的特性，方便队伍的增删改查。</p>
<h3 id="1-定义线性表"><a href="#1-定义线性表" class="headerlink" title="1. 定义线性表"></a>1. 定义线性表</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Team* team = <span class="keyword">new</span> Team[maxn];<span class="comment">//maxn为const常量，值为1000，限定了队伍数量的上限</span></span><br></pre></td></tr></table></figure>

<h3 id="2-读入数据"><a href="#2-读入数据" class="headerlink" title="2.读入数据"></a>2.读入数据</h3><p>打开文件后先将每一行的数据保存至string类型的<strong>info数组</strong>中</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">ifstream file;</span><br><span class="line">file.<span class="built_in">open</span>(<span class="string">&quot;team.txt&quot;</span>, ios::in <span class="comment">/*| ios::binary*/</span>);</span><br><span class="line">string info;</span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">getline</span>(file, info)) &#123;</span><br><span class="line">	teamInfo[count] = info;</span><br><span class="line">	<span class="built_in">trim</span>(teamInfo[count]);<span class="comment">//trim函数用于删除每行中的缩进符&quot;\t&quot;</span></span><br><span class="line">	teamInfo[count] +=<span class="string">&#x27;#&#x27;</span>;<span class="comment">//在末尾添加&#x27;#&#x27;，便于后续处理</span></span><br><span class="line">	count++;</span><br><span class="line">&#125;</span><br><span class="line">file.<span class="built_in">close</span>();</span><br><span class="line">amount = count<span class="number">-1</span>;</span><br></pre></td></tr></table></figure>

<p>其中<strong>count</strong>记录行数，<strong>amount</strong>记录队伍数量</p>
<h3 id="3-保存至线性表"><a href="#3-保存至线性表" class="headerlink" title="3. 保存至线性表"></a>3. 保存至线性表</h3><p>线性表<strong>team</strong>是一个Team类对象数组，因此保存数据时需先分割数据，再进行赋值，每两个数据之间使用#进行分割</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= amount; i++) &#123;</span><br><span class="line">		string* str = <span class="keyword">new</span> string[<span class="number">6</span>];</span><br><span class="line">		<span class="type">int</span> start = <span class="number">0</span>;</span><br><span class="line">		<span class="type">int</span> end = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> ((end = teamInfo[i].<span class="built_in">find</span>(<span class="string">&#x27;#&#x27;</span>, start)) != string::npos) &#123;</span><br><span class="line">				str[j] = teamInfo[i].<span class="built_in">substr</span>(start, (<span class="type">double</span>)end - start);</span><br><span class="line">				start = end + <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function">Team <span class="title">t</span><span class="params">(str[<span class="number">0</span>], str[<span class="number">1</span>], str[<span class="number">2</span>], str[<span class="number">3</span>], str[<span class="number">4</span>], str[<span class="number">5</span>])</span></span>;</span><br><span class="line">		team[i] = t;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>tip：</strong>队伍的信息从team[1]开始，到team[amount]结束，team[0]为标题行</p>
<h2 id="二、队伍信息管理"><a href="#二、队伍信息管理" class="headerlink" title="二、队伍信息管理"></a>二、队伍信息管理</h2><h3 id="1-增加队伍"><a href="#1-增加队伍" class="headerlink" title="1. 增加队伍"></a>1. 增加队伍</h3><p>队伍增加功能使用<strong>Add()</strong> 函数实现，用户需根据提示输入相应的信息进行添加</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string teamID;<span class="comment">//参赛队编号</span></span><br><span class="line">	string workTitles;<span class="comment">//参赛作品名称</span></span><br><span class="line">	string schoolName;<span class="comment">//参赛学校</span></span><br><span class="line">	string category;<span class="comment">//	赛事类别</span></span><br><span class="line">	string participant;<span class="comment">//参赛者</span></span><br><span class="line">	string teacher;<span class="comment">//指导老师</span></span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入队伍编号：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; teamID;</span><br><span class="line">	<span class="type">int</span> index = <span class="built_in">findIndex</span>(teamID);</span><br><span class="line">	<span class="keyword">if</span> (index != <span class="number">0</span>) &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;编号编号已存在！\n&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入作品名称：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; workTitles;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入学校名称：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; schoolName;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请选择赛事大类：\n&quot;</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">		cout &lt;&lt; i &lt;&lt; <span class="string">&quot;.&quot;</span> &lt;&lt; bigtype[i] &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> s;	</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">		cin &gt;&gt; s;</span><br><span class="line">		<span class="keyword">if</span> (s &gt;= <span class="number">9</span> || s &lt; <span class="number">0</span>) &#123;</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;无该赛事选项，请重新输入！\n&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请选择赛事小类：\n&quot;</span>;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (smalltype[s][i] != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">		cout &lt;&lt; i &lt;&lt; <span class="string">&quot;.&quot;</span> &lt;&lt; smalltype[s][i] &lt;&lt; endl;</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> ss;</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">		cin &gt;&gt; ss;</span><br><span class="line">		<span class="keyword">if</span> (s &gt;= <span class="number">9</span> || s &lt; <span class="number">0</span>) &#123;</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;无该赛事选项，请重新输入！\n&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入参赛者姓名：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; participant;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入指导老师姓名：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; teacher;</span><br><span class="line">	<span class="function">Team <span class="title">t</span><span class="params">(teamID, workTitles, schoolName,smalltype[s][ss], participant, teacher)</span></span>;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;添加成功！\n&quot;</span>;</span><br><span class="line">	team[++amount] = t;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;是否保存 1.是 0.否\n&quot;</span>;</span><br><span class="line">	<span class="type">int</span> sel;</span><br><span class="line">	cin &gt;&gt; sel;</span><br><span class="line">	<span class="keyword">if</span> (sel == <span class="number">1</span>) &#123;</span><br><span class="line">		<span class="built_in">Save</span>();</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;已保存至team.txt中&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>作品编号是唯一的，若输入的作品编号已存在则需要重新输入。</p>
<p><strong>作品编号检索</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">findIndex</span><span class="params">(string id)</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= amount; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (team[i].<span class="built_in">getTeamID</span>() == id) &#123;</span><br><span class="line">			index = i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> index;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>队伍编号采用顺序查找的方式进行检索,虽然顺序查找的效率较低，但该项目的数据量较小且队伍编号是无序的，采用顺序查找能简化操作步骤，因此选用顺序查找。</p>
<h3 id="2-删除队伍"><a href="#2-删除队伍" class="headerlink" title="2. 删除队伍"></a>2. 删除队伍</h3><p>删除队伍是通过输入队伍编号进行删除的，项目中使用<strong>Del()</strong> 函数进行删除</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Del</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入需要删除的队伍的队伍编号：&quot;</span>;</span><br><span class="line">	string id;</span><br><span class="line">	cin &gt;&gt; id;</span><br><span class="line">	<span class="type">int</span> index = <span class="built_in">findIndex</span>(id);</span><br><span class="line">	<span class="keyword">if</span> (index == <span class="number">0</span>) &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;不存在该队伍！\n&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = index; i &lt;= amount<span class="number">-1</span>; i++) &#123;</span><br><span class="line">		team[i] = team[i + <span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	amount--;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;已成功删除编号为&quot;</span> &lt;&lt; id &lt;&lt; <span class="string">&quot;的队伍&quot;</span>;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;是否保存 1.是 0.否\n&quot;</span>;</span><br><span class="line">	<span class="type">int</span> s;</span><br><span class="line">	cin &gt;&gt; s;</span><br><span class="line">	<span class="keyword">if</span> (s == <span class="number">1</span>) &#123;</span><br><span class="line">		<span class="built_in">Save</span>();</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;已保存至team.txt中&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="3-编辑队伍"><a href="#3-编辑队伍" class="headerlink" title="3. 编辑队伍"></a>3. 编辑队伍</h3><p>与删除队伍一样，编辑队伍是通过输入队伍编号来找到相应的队伍进行操作的，项目中使用<strong>Edit()</strong> 函数实现</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Edit</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入队伍编号：&quot;</span>;</span><br><span class="line">	string id;</span><br><span class="line">	cin &gt;&gt; id;</span><br><span class="line">	<span class="type">int</span> index = <span class="built_in">findIndex</span>(id);</span><br><span class="line">	<span class="keyword">if</span> (index == <span class="number">0</span>) &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;不存在该队伍！\n&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> sel;</span><br><span class="line">	string teamID;</span><br><span class="line">	string workTitles;</span><br><span class="line">	string schoolName;</span><br><span class="line">	string category;</span><br><span class="line">	string participant;</span><br><span class="line">	string teacher;</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;请选择要修改的信息：1.参赛队编号\n参赛作品名称\n3.参赛学校\n4.赛事类别\n5.参赛者\n6.指导老师\n0.退出修改 \n&quot;</span>;</span><br><span class="line">		cin &gt;&gt; sel;</span><br><span class="line">		<span class="keyword">switch</span> (sel)&#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;请输入队伍编号：&quot;</span>;</span><br><span class="line">				cin &gt;&gt; teamID;</span><br><span class="line">				team[index].<span class="built_in">setTeamID</span>(teamID);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;请输入作品名称：&quot;</span>;</span><br><span class="line">				cin &gt;&gt; workTitles;</span><br><span class="line">				team[index].<span class="built_in">setWorkTitles</span>(workTitles);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">				</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>: &#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;请输入学校名称：&quot;</span>;</span><br><span class="line">				cin &gt;&gt; schoolName;</span><br><span class="line">				team[index].<span class="built_in">setSchoolName</span>(schoolName);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">				</span><br><span class="line">			<span class="keyword">case</span> <span class="number">4</span>: &#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;请选择赛事大类：\n&quot;</span>;</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">					cout &lt;&lt; i &lt;&lt; <span class="string">&quot;.&quot;</span> &lt;&lt; bigtype[i] &lt;&lt; endl;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="type">int</span> s;</span><br><span class="line">				<span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">					cin &gt;&gt; s;</span><br><span class="line">					<span class="keyword">if</span> (s &gt;= <span class="number">9</span> || s &lt; <span class="number">0</span>) &#123;</span><br><span class="line">						cout &lt;&lt; <span class="string">&quot;无该赛事选项，请重新输入！\n&quot;</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="keyword">break</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;请选择赛事小类：\n&quot;</span>;</span><br><span class="line">				<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">while</span> (smalltype[s][i] != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">					cout &lt;&lt; i &lt;&lt; <span class="string">&quot;.&quot;</span> &lt;&lt; smalltype[s][i] &lt;&lt; endl;</span><br><span class="line">					i++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="type">int</span> ss;</span><br><span class="line">				<span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">					cin &gt;&gt; ss;</span><br><span class="line">					<span class="keyword">if</span> (smalltype[s][ss]==<span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">						cout &lt;&lt; <span class="string">&quot;无该赛事选项，请重新输入！\n&quot;</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="keyword">break</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				team[index].<span class="built_in">setCategory</span>(smalltype[s][ss]);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">				</span><br><span class="line">			<span class="keyword">case</span> <span class="number">5</span>: &#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;请输入参赛者姓名：&quot;</span>;</span><br><span class="line">				cin &gt;&gt; participant;</span><br><span class="line">				team[index].<span class="built_in">setParticipant</span>(participant);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;	</span><br><span class="line">			<span class="keyword">case</span> <span class="number">6</span>: &#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;请输入指导老师姓名：&quot;</span>;</span><br><span class="line">				cin &gt;&gt; teacher;</span><br><span class="line">				team[index].<span class="built_in">setTeacher</span>(teacher);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;是否保存 1.是 0.否\n&quot;</span>;</span><br><span class="line">	<span class="type">int</span> a;</span><br><span class="line">	cin &gt;&gt; a;</span><br><span class="line">	<span class="keyword">if</span> (a== <span class="number">1</span>) &#123;</span><br><span class="line">		<span class="built_in">Save</span>();</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;已保存至team.txt中&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>得益于Team类的封装，在Edit()函数中可直接调用set函数来对队伍信息进行修改</p>
<h3 id="4-保存功能"><a href="#4-保存功能" class="headerlink" title="4. 保存功能"></a>4. 保存功能</h3><p>对队伍信息做出修改后需要保存修改内容，因此需要将线性表中的数据写回team.txt，该操作使用<strong>Save()</strong> 函数实现</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ofstream file;</span><br><span class="line">	file.<span class="built_in">open</span>(<span class="string">&quot;team.txt&quot;</span>, ios::out);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;amount; i++) &#123;</span><br><span class="line">		file &lt;&lt; team[i].<span class="built_in">getTeamID</span>() &lt;&lt; <span class="string">&quot;\t#\t&quot;</span> &lt;&lt; team[i].<span class="built_in">getWorkTitles</span>() &lt;&lt; <span class="string">&quot;\t#\t&quot;</span> &lt;&lt; 		 	      		team[i].<span class="built_in">getSchoolName</span>() &lt;&lt;</span><br><span class="line">			<span class="string">&quot;\t#\t&quot;</span> &lt;&lt; team[i].<span class="built_in">getCategory</span>() &lt;&lt; <span class="string">&quot;\t#\t&quot;</span> &lt;&lt; team[i].<span class="built_in">getParticipant</span>() &lt;&lt; <span class="string">&quot;\t#\t&quot;</span> &lt;&lt; 		    	team[i].<span class="built_in">getTeacher</span>() &lt;&lt;</span><br><span class="line">			<span class="string">&quot;\t&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行上述函数后将按原格式保存至<strong>team.txt</strong>，便于下一次使用</p>
<h1 id="课程设计预习日志三"><a href="#课程设计预习日志三" class="headerlink" title="课程设计预习日志三"></a>课程设计预习日志三</h1><h2 id="一、查找功能"><a href="#一、查找功能" class="headerlink" title="一、查找功能"></a>一、查找功能</h2><p>查找功能分为按队伍编号查找和按学校查找，两个查找方法分别使用<strong>Search_ID()</strong> 和<strong>Search_School()</strong> 函数来实现</p>
<h3 id="1-按队伍编号查找"><a href="#1-按队伍编号查找" class="headerlink" title="1.按队伍编号查找"></a>1.按队伍编号查找</h3><p>按课程任务书要求，队伍编号查找需使用二叉查找树进行查找，因此先定义二叉查找树的相关操作</p>
<h4 id="二叉查找树的创建"><a href="#二叉查找树的创建" class="headerlink" title="二叉查找树的创建"></a>二叉查找树的创建</h4><p>将线性表中的数据插入二叉搜索树中，并返回其根节点</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">node* <span class="title">Create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	node* root = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; amount; i++) &#123;</span><br><span class="line">		<span class="built_in">Insert</span>(root,team[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="二叉查找树的插入"><a href="#二叉查找树的插入" class="headerlink" title="二叉查找树的插入"></a>二叉查找树的插入</h4><p>根据队伍编号的大小来决定插入位置</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Insert</span><span class="params">(node* &amp;root, Team t)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (root == <span class="literal">NULL</span>) &#123;<span class="comment">//若节点不存在则新建</span></span><br><span class="line">		root = <span class="keyword">new</span> node;</span><br><span class="line">		root-&gt;team = t;</span><br><span class="line">		root-&gt;left = <span class="literal">NULL</span>;</span><br><span class="line">		root-&gt;right = <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (t.<span class="built_in">getTeamID</span>() == root-&gt;team.<span class="built_in">getTeamID</span>()) &#123;<span class="comment">//若已存在则返回</span></span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (t.<span class="built_in">getTeamID</span>() &lt; root-&gt;team.<span class="built_in">getTeamID</span>()) &#123;<span class="comment">//向左子树插入</span></span><br><span class="line">		<span class="built_in">Insert</span>(root-&gt;left, t);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (t.<span class="built_in">getTeamID</span>() &gt; root-&gt;team.<span class="built_in">getTeamID</span>()) &#123;<span class="comment">//向右子树插入</span></span><br><span class="line">		<span class="built_in">Insert</span>(root-&gt;right, t);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="二叉查找树的查找"><a href="#二叉查找树的查找" class="headerlink" title="二叉查找树的查找"></a>二叉查找树的查找</h4><p>采用递归的思想进行查找，时间复杂度为<strong>O(logn)</strong>  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Search_ID</span><span class="params">(node* root,string id)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (root == <span class="literal">NULL</span>) &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;查找失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (root-&gt;team.<span class="built_in">getTeamID</span>()==id ) &#123;<span class="comment">//若已存在则返回</span></span><br><span class="line">		team[<span class="number">0</span>].<span class="built_in">PrintTeamINFO</span>();</span><br><span class="line">		root-&gt;team.<span class="built_in">PrintTeamINFO</span>();</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (id &lt; root-&gt;team.<span class="built_in">getTeamID</span>()) &#123;<span class="comment">//向左子树插入</span></span><br><span class="line">		<span class="built_in">Search_ID</span>(root-&gt;left, id);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (id &gt; root-&gt;team.<span class="built_in">getTeamID</span>()) &#123;<span class="comment">//向右子树插入</span></span><br><span class="line">		<span class="built_in">Search_ID</span>(root-&gt;right, id);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="二叉查找树的平均查找长度（ASL）计算"><a href="#二叉查找树的平均查找长度（ASL）计算" class="headerlink" title="二叉查找树的平均查找长度（ASL）计算"></a>二叉查找树的平均查找长度（ASL）计算</h4><p>二叉查找树的ASL为计算公式：<img src="E:\blog\public\images\image-20230605193012592.png" alt="image-20230605193012592"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">ASL</span><span class="params">(node* root)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (root != <span class="literal">NULL</span>) &#123;</span><br><span class="line">		root-&gt;layer = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> cnt = root-&gt;layer;</span><br><span class="line">	queue&lt;node*&gt; q;</span><br><span class="line">	q.<span class="built_in">push</span>(root);</span><br><span class="line">	<span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">		node* now = q.<span class="built_in">front</span>();</span><br><span class="line">		q.<span class="built_in">pop</span>();</span><br><span class="line">		<span class="keyword">if</span> (now-&gt;left != <span class="literal">NULL</span>) &#123;</span><br><span class="line">			now-&gt;left-&gt;layer = now-&gt;layer + <span class="number">1</span>;</span><br><span class="line">			cnt += now-&gt;left-&gt;layer;</span><br><span class="line">			q.<span class="built_in">push</span>(now-&gt;left);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (now-&gt;right != <span class="literal">NULL</span>) &#123;</span><br><span class="line">			now-&gt;right-&gt;layer = now-&gt;layer + <span class="number">1</span>;</span><br><span class="line">			cnt += now-&gt;right-&gt;layer;</span><br><span class="line">			q.<span class="built_in">push</span>(now-&gt;right);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> (<span class="type">double</span>)cnt / (<span class="type">double</span>)amount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>课程设计</tag>
      </tags>
  </entry>
</search>
